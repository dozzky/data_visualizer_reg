import streamlit as st
import pandas as pd
import json
import altair as alt
import numpy as np
from datetime import datetime, timedelta
from typing import Any


st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ —Ä–∞–±–æ—Ç—ã –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è ‚Äî –ø–æ —Å–º–µ–Ω–∞–º", layout="wide")


st.title("üìä –ê–Ω–∞–ª–∏–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è ‚Äî –ö–∫—Ñ –∏ –ö–∏—Å–≤—Ä (–ø–æ —Å–º–µ–Ω–∞–º)")


# ---------------------------
# –£—Ç–∏–ª–∏—Ç—ã
# ---------------------------


def ensure_list(x: Any):
"""–ü—Ä–∏–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫ —Å–ø–∏—Å–∫—É: –µ—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞-JSON -> —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å, –µ—Å–ª–∏ –ø—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ -> [—Å—Ç—Ä–æ–∫–∞], –µ—Å–ª–∏ NaN -> []."""
if pd.isna(x):
return []
if isinstance(x, list):
return x
if isinstance(x, (tuple, set)):
return list(x)
if isinstance(x, str):
s = x.strip()
# –ü–æ–ø—ã—Ç–∫–∞ —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON-–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞
if s.startswith("[") and s.endswith("]"):
try:
return json.loads(s)
except Exception:
pass
# –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –≤–∏–¥–∞ 'True'/'False' –∏–ª–∏ –ø—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
return [x]
return [x]




def to_bool(x: Any) -> bool:
if isinstance(x, bool):
return x
if isinstance(x, (int, float)):
return x != 0
if isinstance(x, str):
s = x.strip().lower()
return s in ("true", "1", "yes", "y", "t")
return False




def duration_hours_from_item(item: Any) -> float:
"""–ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–ª—É—á–∏—Ç—å —á–∞—Å—ã –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤:
- —á–∏—Å–ª–æ -> —Å—á–∏—Ç–∞–µ–º –∫–∞–∫ —á–∞—Å—ã
- —Å—Ç—Ä–æ–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ '0001-01-01T05:00:00' -> –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º—è (5—á)
- —Å—Ç—Ä–æ–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ 'HH:MM:SS' -> –ø–µ—Ä–µ–≤–æ–¥ –≤ —á–∞—Å—ã
- —Å—Ç—Ä–æ–∫–∞ —Å –¥—Ä–æ–±–Ω—ã–º —á–∏—Å–ª–æ–º -> float
–í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0.0
"""
if item is None:
return 0.0
# —á–∏—Å–ª–æ–≤–æ–π
if isinstance(item, (int, float)):
try:
return float(item)
except Exception:
return 0.0
# —Å—Ç—Ä–æ–∫–∞
if isinstance(item, str):
s = item.strip()
if s == "":
return 0.0
# iso-like with dateTtime
try:
